#!/usr/bin/env python3

import fire
import subprocess
import pprint
import os
import sys
import re

class Trimmer(object):
    """
    Trimmer - trim lines in files, replace \r\n with \n and add final \n in file
    """

    def right(self, dir: str = '.'):
        print(f"DIRECTORY: {dir}")
        for root, subdirs, files in os.walk(dir):
            if (self._not_masked(root)):
                for filename in files:
                    if (self._not_masked(filename)):
                        full_filename = f"{root}/{filename}"
                        print(f"    {full_filename}")
                        self._process(full_filename)

    def _not_masked(self, dir: str):
        regexps = [
            ".*/\.git$",
            ".*/\.git/.*",
            ".*/\.idea$",
            ".*/\.idea/.*",
            ".*\.DS_Store$",
            ".*\.png$",
            ".*__pycache__$",
            ".*.pytest_cache$",
            ".*.pytest_cache/.*",
        ]

        for regexp in regexps:
            if (re.match(regexp, dir)):
                return False

        return True

    def _process(self, filename):
        self._load_file(filename)
        self._transform_data()
        self._save_file(filename)

    def _load_file(self, filename: str):
        with open (filename, "r") as myfile:
            self.data = myfile.readlines()

    def _transform_data(self):
        converted = []
        for line in self.data:
            converted.append(line.rstrip(" \n\r"))
        self.data = converted

    def _save_file(self, filename):
        with open(filename, "w") as text_file:
            text_file.write("\n".join(self.data) + "\n")

def main():
    fire.Fire(Trimmer)

if __name__ == '__main__':
    main()
